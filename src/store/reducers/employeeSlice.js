import { createSlice } from "@reduxjs/toolkit";

// Initial state for the employee slice
const initialState = {
  employees: [], // Array to store employee data
};

// Creating employee slice using createSlice from Redux Toolkit
export const employeeSlice = createSlice({
  name: "employees", // Name of the slice
  initialState, // Initial state
  reducers: {
    // Reducer function to add a new employee
    addEmployee: (state, action) => {
      state.employees.push(action.payload); // Pushing new employee data into the employees array
    },
    // Reducer function to edit an existing employee
    editEmployee: (state, action) => {
      // Destructuring payload to extract employee data
      const { id, fullName, birthdate, department, experience } =
        action.payload;
      // Finding index of the employee to be edited
      const index = state.employees.findIndex((employee) => employee.id === id);
      // Updating employee data if found
      if (index !== -1) {
        state.employees[index] = {
          id,
          fullName,
          birthdate,
          department,
          experience,
        };
      }
    },
    // Reducer function to delete an employee
    deleteEmployee: (state, action) => {
      // Filtering out the employee to be deleted
      state.employees = state.employees.filter(
        (employee) => employee.id !== action.payload.id
      );
    },
  },
});

// Exporting actions generated by createSlice
export const { addEmployee, editEmployee, deleteEmployee } =
  employeeSlice.actions;

// Exporting employee reducer
export default employeeSlice.reducer;
